[project]
name = "nursy"
version = "0.1.0"
description = ""
authors = [
    {name = "Ing. Samuel Sipikal"},
    {name = "Ing. David Tomecek"},
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi (>=0.116.1,<0.117.0)",
    "openai (>=1.97.0,<2.0.0)",
    "python-dotenv (>=1.1.1,<2.0.0)",
    "jose (>=1.0.0,<2.0.0)",
    "uvicorn (>=0.35.0,<0.36.0)",
    "bcrypt (>=4.3.0,<5.0.0)",
    "sqlalchemy (>=2.0.43,<3.0.0)",
    "alembic (>=1.16.5,<2.0.0)",
    "jwt (>=1.4.0,<2.0.0)",
    "pyjwt (>=2.10.1,<3.0.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false

[tool.ruff]
exclude = [
    ".git",
    ".hypothesis",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "cdk.out",
    "local_caches",
    "node_modules",
]
line-length = 200
target-version = "py312"

[tool.ruff.per-file-ignores]
"**/tests/**/*.py" = ["S101"]
"**/routers/*.py" = ["B008"]

[tool.ruff.lint]
preview = true
ignore = [
    "A001", # Variable {name} is shadowing a python builtin
    "A002", # Argument {name} is shadowing a python builtin
    "A003", # Attribute {name} is shadowing a python builtin
    "B009", # Do not call `getattr` with a constant attribute value. It is not any safer than normal property access. -> MyPy complains on private members.
    "B010", # Do not call `setattr` with a constant attribute value. It is not any safer than normal property access.
    "B905", # `zip()` without an explicit `strict=` parameter
    "BLE001", # Do not catch blind exception: `Exception`
    "C408", # dict() call
    "C420", # dict.fromkeys
    "E266", # Too many leading `#` before block comment
    "N818", # Exception name {name} should be named with an Error suffix
    "PT001", # Use @pytest.fixture() over @pytest.fixture
    "S105", # Potential usage of hardcoded passwords in strings
    "S106", # Potential usege of hardcoded secrets in strings
    "S301", # `pickle` and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
    "S403", # `pickle`, `cPickle`, `dill`, and `shelve` modules are possibly insecure
    "S404", # Suspicious subprocess import
    "S603", # `subprocess` call: check for execution of untrusted input
    "S607", # starting of a (sub)process with a partial executable path
    "SIM102", # Use a single `if` statement instead of nested `if` statements
    "SIM108", # Use a ternary operator instead of if-else block
    "SIM117", # Use a single `with` statement with multiple contexts instead of nested `with` statements
    "SIM118", # Do not use "k in actual.keys()"
    "UP015", # Unnecessary open mode parameters
    "ERA001", # Commented-out code
    "UP007",  # Allow Optional[T] instead of T | None
]
select = [
    'A', # flake8-builtins
    'B', # flake8-bugbear
    'BLE', # flake8-blind-except
    'C4', # flake8-comprehensions
    'C90', # mccabe
    'COM', # flake8-commas
    'DTZ', # flake8-datetimez
    'E', # pycodestyle / Error
    'ERA', # eradicate
    'F', # Pyflakes
    'I', # isort
    'N', # pep8-naming
    'NPY', # NumPy-specific rules
    'PIE', # flake8-pie
    'PT', # flake8-pytest-style
    'PTH', # flake8-use-pathlib
    'S', # flake8-bandit
    'SIM', # flake8-simplify
    'TID', # flake8-tidy-imports
    'UP', # pyupgrade
    'W', # pycodestyle / Warning
]

unfixable = [
    "UP007",  # Prevent auto-fixes from rewriting Optional to |
]

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.mypy]
files = ["src"]
explicit_package_bases = true

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = [
    'src*',
]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.root_validator",
    "pydantic.validator",
]

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.poetry.group.dev.dependencies]
ruff = "^0.12.4"
pytest = "^8.4.1"
mypy = "^1.17.1"
